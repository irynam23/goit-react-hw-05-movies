{"version":3,"file":"static/js/881.2ffa4a2b.chunk.js","mappings":"+SAEaA,EAAU,mCAAG,sGACDC,EAAAA,EAAAA,IAAA,oGADC,uBAChBC,EADgB,EAChBA,KADgB,kBAKjBA,GALiB,2CAAH,qDAQVC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,6CACiBG,EADjB,8CADO,uBACtBF,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBG,EAAU,mCAAG,WAAMD,GAAN,yFACDH,EAAAA,EAAAA,IAAA,6CACiBG,EADjB,sDADC,uBAChBF,EADgB,EAChBA,KADgB,kBAKjBA,GALiB,2CAAH,sDAQVI,EAAO,mCAAG,WAAMF,GAAN,yFACEH,EAAAA,EAAAA,IAAA,6CACiBG,EADjB,sDADF,uBACbF,EADa,EACbA,KADa,kBAKdA,GALc,2CAAH,sDAQPK,EAAS,mCAAG,WAAMC,GAAN,yFACAP,EAAAA,EAAAA,IAAA,mGACuEO,IAFvE,uBACfN,EADe,EACfA,KADe,kBAKhBA,EAAKO,SALW,2CAAH,qD,qIChCtB,EAAuB,qBAAvB,EAAoD,sBAApD,EAAgF,oB,oCCsEhF,EAhEe,WACb,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAcJ,EAAaK,IAAI,WAErCC,EAAAA,EAAAA,YAAU,YACR,iBAAC,uFACMF,EADN,iEAGGN,GAAa,GAHhB,UAI0BP,EAAAA,EAAAA,IAAUa,GAJpC,OAISG,EAJT,OAKGX,EAAUW,GALb,kDAOGC,EAAAA,OAAAA,QAAe,8BAPlB,yBASGV,GAAa,GAThB,4EAAD,EAYD,GAAE,CAACM,IAEJ,IAAMK,EAAQ,mCAAG,WAAMC,GAAN,0EACfA,EAAEC,kBACInB,EAAQkB,EAAEE,OAAOpB,MAAMqB,MAAMC,cAAcC,SACnCvB,IAAUY,EAHT,iDAIfH,EAAgB,CAAEe,OAAQxB,IAJX,2CAAH,sDAOd,OACE,iBAAKyB,UAAWC,EAAhB,WACE,kBAAMT,SAAUA,EAAhB,WACE,kBACEQ,UAAWC,EACXC,KAAK,OACLC,YAAY,yBACZC,KAAK,WAGP,mBAAQJ,UAAWC,EAASC,KAAK,SAAjC,wBAIF,wBACGxB,GACCA,EAAO2B,KAAI,SAAAC,GACT,OACE,yBACE,SAAC,KAAD,CACEC,MAAO,CACLC,KAAMvB,GAERwB,GAAE,kBAAaH,EAAMnC,IAJvB,UAME,wBAAKmC,EAAMI,WAPNJ,EAAMnC,GAWlB,MAEJS,IAAa,SAAC+B,EAAA,EAAD,MAGnB,C","sources":["api.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getPopular = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=004aa31770cc2729c6dd319813b8b5dc&page=1`\n  );\n\n  return data;\n};\n\nexport const addMovieIDetails = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=004aa31770cc2729c6dd319813b8b5dc`\n  );\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=004aa31770cc2729c6dd319813b8b5dc`\n  );\n\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=004aa31770cc2729c6dd319813b8b5dc`\n  );\n\n  return data;\n};\n\nexport const getByName = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=004aa31770cc2729c6dd319813b8b5dc&query=${query}`\n  );\n\n  return data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Movies_wrap__qvGuo\",\"input\":\"Movies_input__KrUqs\",\"btn\":\"Movies_btn__TlfBQ\"};","import { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport css from './Movies.module.css';\nimport { getByName } from 'api';\nimport { Loader } from 'components/Loader/Loader';\nimport { Notify } from 'notiflix';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const searchQuery = searchParams.get('search');\n\n  useEffect(() => {\n    (async () => {\n      if (!searchQuery) return;\n      try {\n        setIsLoading(true);\n        const response = await getByName(searchQuery);\n        setMovies(response);\n      } catch (error) {\n        Notify.failure('Oooops, smth went wrong :(');\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [searchQuery]);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const query = e.target.query.value.toLowerCase().trim();\n    if (!query || query === searchQuery) return;\n    setSearchParams({ search: query });\n  };\n\n  return (\n    <div className={css.wrap}>\n      <form onSubmit={onSubmit}>\n        <input\n          className={css.input}\n          type=\"text\"\n          placeholder=\"Enter name of movie...\"\n          name=\"query\"\n        />\n\n        <button className={css.btn} type=\"submit\">\n          Search\n        </button>\n      </form>\n      <ul>\n        {movies &&\n          movies.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link\n                  state={{\n                    from: location,\n                  }}\n                  to={`/movies/${movie.id}`}\n                >\n                  <h3>{movie.title}</h3>\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n      {isLoading && <Loader />}\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["getPopular","axios","data","addMovieIDetails","id","getReviews","getCast","getByName","query","results","useState","movies","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","response","Notify","onSubmit","e","preventDefault","target","value","toLowerCase","trim","search","className","css","type","placeholder","name","map","movie","state","from","to","title","Loader"],"sourceRoot":""}