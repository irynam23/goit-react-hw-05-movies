{"version":3,"file":"static/js/135.7c00adea.chunk.js","mappings":"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","sources":["api.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getPopular = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=004aa31770cc2729c6dd319813b8b5dc&page=1`\n  );\n\n  return data;\n};\n\nexport const addMovieIDetails = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=004aa31770cc2729c6dd319813b8b5dc`\n  );\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=004aa31770cc2729c6dd319813b8b5dc`\n  );\n\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=004aa31770cc2729c6dd319813b8b5dc`\n  );\n\n  return data;\n};\n\nexport const getByName = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=004aa31770cc2729c6dd319813b8b5dc&query=${query}`\n  );\n\n  return data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieItem\":\"MovieDetails_movieItem__M-n2s\",\"wraptop\":\"MovieDetails_wraptop__7ortF\",\"wrapbottom\":\"MovieDetails_wrapbottom__kuyfG\"};","import React, { useEffect, useState, lazy, Suspense } from 'react';\nimport { Route, Routes, useLocation } from 'react-router-dom';\nimport { addMovieIDetails } from 'api.js';\nimport { Link, useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { Notify } from 'notiflix';\nimport css from './MovieDetails.module.css';\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\nconst Cast = lazy(() => import('components/Cast/Cast'));\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        setIsLoading(true);\n\n        const data = await addMovieIDetails(movieId);\n        setMovieDetails(data);\n      } catch (error) {\n        Notify.failure('Oooops, smth went wrong :(');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovies();\n  }, [movieId]);\n\n  return (\n    <>\n      <div className={css.wraptop}>\n        <Link to={location.state?.from ?? '/'}>Go back</Link>\n        {movieDetails && (\n          <div className={css.movieItem}>\n            <img\n              className={css.movieItemImg}\n              alt=\"movie\"\n              src={'https://image.tmdb.org/t/p/w500' + movieDetails.poster_path}\n              loading=\"lazy\"\n              height=\"400\"\n            />\n            <div className={css.movieItemInfo}>\n              <h2 className={css.movieItemTitle}>\n                {movieDetails.title} ({movieDetails.release_date.split('-')[0]})\n              </h2>\n              <p className={css.movieItemDetails}>\n                User Score: {Math.round(movieDetails.vote_average * 10)}%\n              </p>\n              <h3 className={css.movieItemName}>Overview</h3>\n              <p className={css.movieItemDetails}>{movieDetails.overview}</p>\n              <h4 className={css.movieItemName}>Genres</h4>\n              <p className={css.movieItemDetails}>\n                {movieDetails.genres.map(({ name }) => name).join(', ')}\n              </p>\n            </div>\n          </div>\n        )}\n\n        {isLoading && <Loader />}\n      </div>\n      <div className={css.wrapbottom}>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to={`cast`} state={{ from: location.state?.from ?? '/' }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to={`reviews`} state={{ from: location.state?.from ?? '/' }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["getPopular","axios","data","addMovieIDetails","id","getReviews","getCast","getByName","query","results","Reviews","lazy","Cast","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","movieId","useParams","location","useLocation","useEffect","Notify","fetchMovies","className","css","to","state","from","alt","src","poster_path","loading","height","title","release_date","split","Math","round","vote_average","overview","genres","map","name","join","Loader","Suspense","fallback","path","element"],"sourceRoot":""}