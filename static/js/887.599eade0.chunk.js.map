{"version":3,"file":"static/js/887.599eade0.chunk.js","mappings":"+SAEaA,EAAU,mCAAG,sGACDC,EAAAA,EAAAA,IAAA,oGADC,uBAChBC,EADgB,EAChBA,KADgB,kBAKjBA,GALiB,2CAAH,qDAQVC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,6CACiBG,EADjB,8CADO,uBACtBF,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBG,EAAU,mCAAG,WAAMD,GAAN,yFACDH,EAAAA,EAAAA,IAAA,6CACiBG,EADjB,sDADC,uBAChBF,EADgB,EAChBA,KADgB,kBAKjBA,GALiB,2CAAH,sDAQVI,EAAO,mCAAG,WAAMF,GAAN,yFACEH,EAAAA,EAAAA,IAAA,6CACiBG,EADjB,sDADF,uBACbF,EADa,EACbA,KADa,kBAKdA,GALc,2CAAH,sDAQPK,EAAS,mCAAG,WAAMC,GAAN,yFACAP,EAAAA,EAAAA,IAAA,mGACuEO,IAFvE,uBACfN,EADe,EACfA,KADe,kBAKhBA,EAAKO,SALW,2CAAH,qD,0KC/BTC,EAAW,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QACpCC,EAAaD,EACf,kCAAoCA,EACpCE,EACJ,OACE,2BACE,gBAAKC,IAAI,QAAQC,IAAKH,EAAYI,QAAQ,OAAOC,OAAO,SACxD,uBAAIR,KACJ,uBAAIC,MAGT,ECsCD,EA5Ca,WACX,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAHiB,wCAKjB,WAAyBN,GAAzB,yFAEIM,GAAa,GAFjB,UAIsCpB,EAAAA,EAAAA,IAAQc,GAJ9C,gBAIkBO,EAJlB,EAIYJ,KAERC,EAAQG,GANZ,gDAQIC,EAAAA,OAAAA,QAAe,8BARnB,yBAUIF,GAAa,GAVjB,4EALiB,wBAyBjB,OANAG,EAAAA,EAAAA,YAAU,WACQ,OAAZT,GApBW,oCAsBfU,CAAUV,EACX,GAAE,CAACA,KAGF,2BACGK,IAAa,SAACM,EAAA,EAAD,IACJ,OAATR,IACC,yBACGA,EAAKS,KAAI,SAACC,EAAOC,GAAR,OACR,SAACxB,EAAD,CAEEC,KAAMsB,EAAMtB,KACZC,UAAWqB,EAAMrB,UACjBC,QAASoB,EAAME,cAHVF,EAAM7B,GAAK8B,EAFV,QAYnB,C","sources":["api.js","components/CastItem/CastItem.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getPopular = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=004aa31770cc2729c6dd319813b8b5dc&page=1`\n  );\n\n  return data;\n};\n\nexport const addMovieIDetails = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=004aa31770cc2729c6dd319813b8b5dc`\n  );\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=004aa31770cc2729c6dd319813b8b5dc`\n  );\n\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=004aa31770cc2729c6dd319813b8b5dc`\n  );\n\n  return data;\n};\n\nexport const getByName = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=004aa31770cc2729c6dd319813b8b5dc&query=${query}`\n  );\n\n  return data.results;\n};\n","import imageNotFound from 'images/imageNotFound.jpeg';\n\nexport const CastItem = ({ name, character, picture }) => {\n  const profilePic = picture\n    ? 'https://image.tmdb.org/t/p/w500' + picture\n    : imageNotFound;\n  return (\n    <li>\n      <img alt=\"movie\" src={profilePic} loading=\"lazy\" height=\"300\" />\n      <p>{name}</p>\n      <p>{character}</p>\n    </li>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { getCast } from 'api';\nimport { useParams } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport { CastItem } from 'components/CastItem/CastItem';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function fetchCast(movieId) {\n    try {\n      setIsLoading(true);\n\n      const { cast: movieCast } = await getCast(movieId);\n\n      setCast(movieCast);\n    } catch (error) {\n      Notify.failure('Oooops, smth went wrong :(');\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (movieId === null) return;\n\n    fetchCast(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {cast !== null && (\n        <div>\n          {cast.map((actor, index) => (\n            <CastItem\n              key={actor.id + index}\n              name={actor.name}\n              character={actor.character}\n              picture={actor.profile_path}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["getPopular","axios","data","addMovieIDetails","id","getReviews","getCast","getByName","query","results","CastItem","name","character","picture","profilePic","imageNotFound","alt","src","loading","height","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","movieCast","Notify","useEffect","fetchCast","Loader","map","actor","index","profile_path"],"sourceRoot":""}